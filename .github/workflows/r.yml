# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release', windows_32_or_64: '64'}
          - {os: macOS-latest, r: 'release'}
          - {os: ubuntu-20.04, r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      # Windows binary paths to allow linking
      CIBW_ENVIRONMENT_WINDOWS: LIB="c://glpk//w64;c://lpsolve" INCLUDE="c://glpk//src;c://"
    
    steps:
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-r@master
      - name: Install Dependencies (Windows)
        run: choco install glpk
        if: matrix.config.os == 'windows-latest'    
      - name: Install GLPK (Windows)
        if: matrix.config.os == 'windows-latest'   
        shell: bash
        env:
          WINGLPK_URL: "https://sourceforge.net/projects/winglpk/files/winglpk/GLPK-4.65/winglpk-4.65.zip/download"
        run: |
          echo $GITHUB_WORKSPACE >> $GITHUB_PATH
          curl -L $WINGLPK_URL --output glpk.zip
          7z x glpk.zip -o/c/
          mv /c/glpk-4.65 /c/glpk
          cp /c/glpk/w64/glpk_4_65.lib /c/glpk/w64/glpk.lib
          cp /c/glpk/w64/glpk_4_65.dll /c/glpk/w64/glpk.dll
          echo ${GITHUB_WORKSPACE}\\glpk-4.65\\w${{ matrix.windows_32_or_64 }} >> $GITHUB_PATH
          echo GLPK_LIB_DIR=${GITHUB_WORKSPACE}\\glpk-4.65\\w${{ matrix.windows_32_or_64 }} >> $GITHUB_ENV
          echo GLPK_INCLUDE_DIR=${GITHUB_WORKSPACE}\\glpk-4.65\\src >> $GITHUB_ENV
      - name: Install Dependencies (Linux)
        run: sudo apt-get install  libglpk-dev libglpk40 libc6 pandoc libcurl4-openssl-dev
        if: matrix.config.os == 'ubuntu-20.04'  
      - name: Install Dependencies (macOS)
        run: brew install pandoc
        if: matrix.config.os == 'macOS-latest'           
      - name: Install dependencies
        run: |
          install.packages(c("remotes", "rcmdcheck"))
          remotes::install_github("igraph/rigraph@master")
          remotes::install_cran("BiocManager")
          BiocManager::install("RBGL")
          remotes::install_deps(dependencies = TRUE)
          remotes::install_github("lcolladotor/biocthis")
          biocthis::use_bioc_github_action()
        shell: Rscript {0}  
      - name: Install igraph (Windows)
        if: matrix.config.os == 'windows-latest'   
        run: |
          install.packages("igraph", type="win.binary", verbose=TRUE)
        shell: Rscript {0}              
      - name: Check
        run: rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "error")
        shell: Rscript {0}
